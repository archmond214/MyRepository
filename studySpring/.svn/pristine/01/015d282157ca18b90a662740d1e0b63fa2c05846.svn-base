package kr.or.nextit.board.web;

import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.nextit.board.service.BoardSearchVo;
import kr.or.nextit.board.service.BoardService;
import kr.or.nextit.board.service.BoardVo;
import kr.or.nextit.session.service.LoginInfoVo;

@Controller
@RequestMapping(value="/board")
public class BoardController {

	private final Logger log =  LoggerFactory.getLogger(this.getClass());
	
	@Autowired
	private BoardService boardService;
	
	@RequestMapping(value= {"/boardListFront.do"})
	public String getBoardList(
			Model model,
			@ModelAttribute BoardSearchVo searchVo
			) throws Exception{
		
		
		List<BoardVo> resultBoardList = boardService.selectBoardList(searchVo);
		model.addAttribute("boardList",resultBoardList);
		
		return "board/boardList";
	}
	
	@RequestMapping(value="/boardInsertForm.do")
	public String getBoardInsertForm(
			Model model,
			@ModelAttribute BoardSearchVo searchVo
			) throws Exception{
		
		
		 return "board/boardForm";
	}
	/**boardInserForm.do 에서 넘어온 데이터를 DB에 적재 
	 * @param model
	 * @param boardVo
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="/boardInsertProc.do")
	public String setBoardInsertProc(
			Model model,
			@ModelAttribute(name="boardVo") BoardVo boardVo,
			HttpServletRequest request
			) throws Exception{
		
		try {
			LoginInfoVo loginInfoVo = (LoginInfoVo)request.getSession().getAttribute("loginInfo");
			//작성자의 IP가져오기
			boardVo.setUsrIp(request.getRemoteAddr());
			boardVo.setRegUser(loginInfoVo.getUsrId());
			
			
			boardService.insertBoardInfo(boardVo);
			//RedirectView
			//정상 등록시 List 이동
			return "redirect:/board/boardListFront.do";
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			model.addAttribute("message",e.getMessage());
		}
		//등록시 에러가 발생하면 등록 폼을 보여줌
		return "board/boardForm";
	
	}
	@RequestMapping(value="/boardViewFront.do")
	public String getBoardViewFront(
			ModelMap modelMap,
			@ModelAttribute(name="searchVo") BoardSearchVo searchVo
			) throws Exception {
		
		BoardVo boardVo = boardService.selectBoardInfo(searchVo.getSeqNo());
		
		modelMap.addAttribute("boardInfo",boardVo);
		
		return "board/boardView";
	}
	@RequestMapping(value="/boardDeleteProc.do")
	public String  setBoardInfoProc(
			Model model,
			@RequestParam HashMap<String, Object> params
			) throws Exception{
		
		 try {
			boardService.deleteBoardInfo(params);
			
			//정상 삭제시 list이동
			return "redirect:/board/boardListFront.do";
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return String.format("redirect:/board/boardViewFront.do?seqNo=%s", params.get("seqNo")); 
		}
	}
	
	@RequestMapping(value="/boardUpdateFront.do")
	public String getBoardUpdateFront(
			Model model,
			@RequestParam HashMap<String, Object> params
			) throws Exception{
		
		BoardVo boardVo = boardService.selectBoardInfo((String)params.get("seqNo"));
		
		model.addAttribute("boardInfo",boardVo);
		
		return "board/boardUpdate";
	}
	
	
	
	
}
